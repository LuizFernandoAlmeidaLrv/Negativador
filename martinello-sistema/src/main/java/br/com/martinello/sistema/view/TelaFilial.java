/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.martinello.sistema.view;

import br.com.martinello.bd.matriz.control.FilialController;
import br.com.martinello.bd.matriz.model.domain.FilialModel;
import br.com.martinello.componentesbasicos.paineis.JPStatus;
import br.com.martinello.componentesbasicos.paineis.TelaProcessamento;
import br.com.martinello.componentesbasicos.view.TelaPadrao;
import br.com.martinello.util.Utilitarios;
import br.com.martinello.util.ValidacaoCpfCnpj;
import br.com.martinello.util.excessoes.ErroSistemaException;
import com.towel.swing.table.ObjectTableModel;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author luiz.almeida
 */
public class TelaFilial extends TelaPadrao {

    private FilialModel filtroFilialModel = new FilialModel();
    private FilialModel filialModel = new FilialModel();
    private final ObjectTableModel<FilialModel> otmFilial = new ObjectTableModel<>(FilialModel.class, "filial,nome,cnpjLoja,email,chaveFacmat,keyFacmat,codigoBvs,codigoFacmat,codigoSpc,operadorSpc,datainicioOperacao,dataOperacaoDbNovo,status,statusSpc,statusFacmat,usuario,dataUltAlteracao");
    private FilialController filiaisControler = new FilialController();
    private String salvarAlterar = "Salvar";
    public List<FilialModel> lfiliaisModel = new ArrayList();
    public int opcao;
    private String valorCopiado;
    private char previousEchoChar = '\u2022';
    private boolean verMovCpf;
    private static String cpfValidar;

    /**
     * Creates new form TelaFilial
     */
    public TelaFilial() {
        initComponents();
        paFilial.setEnabledAt(1, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jsbCadastroFilial = new br.com.martinello.componentesbasicos.paineis.JPStatus();
        paFilial = new br.com.martinello.componentesbasicos.paineis.PainelAba();
        ppConsulta = new br.com.martinello.componentesbasicos.paineis.PainelPadrao();
        jspConsulta = new javax.swing.JScrollPane();
        tpConsultaFilial = new br.com.martinello.componentesbasicos.TabelaPadrao();
        ppFiltros = new br.com.martinello.componentesbasicos.paineis.PainelPadrao();
        rFiltroCodigo = new br.com.martinello.componentesbasicos.Rotulo();
        csFiltroCodigo = new br.com.martinello.componentesbasicos.CampoString();
        rFilroNome = new br.com.martinello.componentesbasicos.Rotulo();
        cscFiltroNome = new br.com.martinello.componentesbasicos.consulta.CampoStringConsulta();
        cccFiltroCnpj = new br.com.martinello.componentesbasicos.CampoCpfCnpj();
        rFiltroCnpj = new br.com.martinello.componentesbasicos.Rotulo();
        bFiltroPesquisar = new br.com.martinello.componentesbasicos.Botao();
        bFiltroIncluir = new br.com.martinello.componentesbasicos.Botao();
        bFiltroAlterar = new br.com.martinello.componentesbasicos.Botao();
        ppCadastro = new br.com.martinello.componentesbasicos.paineis.PainelPadrao();
        rFilialCF = new br.com.martinello.componentesbasicos.Rotulo();
        rNomeCF = new br.com.martinello.componentesbasicos.Rotulo();
        rCnpjCF = new br.com.martinello.componentesbasicos.Rotulo();
        rCodigoSpcCF = new br.com.martinello.componentesbasicos.Rotulo();
        rOperadorSpcCF = new br.com.martinello.componentesbasicos.Rotulo();
        rSenhaSpcCF = new br.com.martinello.componentesbasicos.Rotulo();
        rCodigoFacmatCF = new br.com.martinello.componentesbasicos.Rotulo();
        rCodigoBvsCF = new br.com.martinello.componentesbasicos.Rotulo();
        csFilialCF = new br.com.martinello.componentesbasicos.CampoString();
        csFilialSgl = new br.com.martinello.componentesbasicos.CampoString();
        csNomeCF = new br.com.martinello.componentesbasicos.CampoString();
        cmEmailCF = new br.com.martinello.componentesbasicos.CampoEmail();
        cccCnpj = new br.com.martinello.componentesbasicos.CampoCpfCnpj();
        csCodigoSpcCF = new br.com.martinello.componentesbasicos.CampoString();
        csOperadorSpcCF = new br.com.martinello.componentesbasicos.CampoString();
        cshSenhaSpcCF = new br.com.martinello.componentesbasicos.CampoSenha();
        csCodigoFacmatCF = new br.com.martinello.componentesbasicos.CampoString();
        csCodigoBvsCF = new br.com.martinello.componentesbasicos.CampoString();
        rEmailCF = new br.com.martinello.componentesbasicos.Rotulo();
        cdInicioDbNovoCF = new br.com.martinello.componentesbasicos.CampoData();
        clsSituacaoCF = new br.com.martinello.componentesbasicos.CampoListaSimples();
        clsStatusSpc = new br.com.martinello.componentesbasicos.CampoListaSimples();
        clsStatusFacmat = new br.com.martinello.componentesbasicos.CampoListaSimples();
        rInicioDbnovoCF = new br.com.martinello.componentesbasicos.Rotulo();
        bSalvarCF = new br.com.martinello.componentesbasicos.Botao();
        bLimparCF = new br.com.martinello.componentesbasicos.Botao();
        rSituacao = new br.com.martinello.componentesbasicos.Rotulo();
        rStatusSpc = new br.com.martinello.componentesbasicos.Rotulo();
        rStatusFacmat = new br.com.martinello.componentesbasicos.Rotulo();
        rFilialSgl = new br.com.martinello.componentesbasicos.Rotulo();
        rChaveFacmat = new br.com.martinello.componentesbasicos.Rotulo();
        rKeyFacmat = new br.com.martinello.componentesbasicos.Rotulo();
        csChaveFacmatCF = new br.com.martinello.componentesbasicos.CampoString();
        csKeyFacmatCF = new br.com.martinello.componentesbasicos.CampoString();
        jcbVizualizarSenhaSpc = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastro de Filiais");
        setPreferredSize(new java.awt.Dimension(1366, 768));
        getContentPane().add(jsbCadastroFilial, java.awt.BorderLayout.SOUTH);

        ppConsulta.setLayout(new java.awt.BorderLayout());

        tpConsultaFilial.setModel(otmFilial);
        tpConsultaFilial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tpConsultaFilialFocusLost(evt);
            }
        });
        tpConsultaFilial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tpConsultaFilialMouseClicked(evt);
            }
        });
        tpConsultaFilial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tpConsultaFilialKeyPressed(evt);
            }
        });
        jspConsulta.setViewportView(tpConsultaFilial);

        ppConsulta.add(jspConsulta, java.awt.BorderLayout.CENTER);

        ppFiltros.setPreferredSize(new java.awt.Dimension(1088, 100));

        rFiltroCodigo.setText("CÃ³digo:");

        rFilroNome.setText("Nome:");

        cccFiltroCnpj.setTipo("CNPJ");

        rFiltroCnpj.setText("CNPJ:");

        bFiltroPesquisar.setText("Pesquisar");
        bFiltroPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltroPesquisarActionPerformed(evt);
            }
        });

        bFiltroIncluir.setText("Incluir");
        bFiltroIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltroIncluirActionPerformed(evt);
            }
        });

        bFiltroAlterar.setText("Alterar");
        bFiltroAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltroAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ppFiltrosLayout = new javax.swing.GroupLayout(ppFiltros);
        ppFiltros.setLayout(ppFiltrosLayout);
        ppFiltrosLayout.setHorizontalGroup(
            ppFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rFiltroCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cccFiltroCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bFiltroPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bFiltroIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bFiltroAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(ppFiltrosLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(ppFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppFiltrosLayout.createSequentialGroup()
                        .addComponent(rFiltroCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(csFiltroCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ppFiltrosLayout.createSequentialGroup()
                        .addComponent(rFilroNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cscFiltroNome, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(326, 785, Short.MAX_VALUE))
        );

        ppFiltrosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rFilroNome, rFiltroCnpj, rFiltroCodigo});

        ppFiltrosLayout.setVerticalGroup(
            ppFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ppFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rFiltroCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csFiltroCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rFilroNome, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cscFiltroNome, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cccFiltroCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bFiltroPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bFiltroIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bFiltroAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rFiltroCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        ppFiltrosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {rFilroNome, rFiltroCnpj, rFiltroCodigo});

        ppConsulta.add(ppFiltros, java.awt.BorderLayout.NORTH);

        paFilial.addTab("Consulta", ppConsulta);

        ppCadastro.setEnabled(false);

        rFilialCF.setText("Filial:");
        rFilialCF.setPreferredSize(null);

        rNomeCF.setText("Nome:");
        rNomeCF.setPreferredSize(null);

        rCnpjCF.setText("CNPJ:");
        rCnpjCF.setPreferredSize(null);

        rCodigoSpcCF.setText("CÃ³digo Spc:");
        rCodigoSpcCF.setPreferredSize(null);

        rOperadorSpcCF.setText("Operador Spc:");
        rOperadorSpcCF.setPreferredSize(null);

        rSenhaSpcCF.setText("Senha Spc:");
        rSenhaSpcCF.setPreferredSize(null);

        rCodigoFacmatCF.setText("CÃ³digo Facmat:");
        rCodigoFacmatCF.setPreferredSize(null);

        rCodigoBvsCF.setText("CÃ³digo Bvs:");
        rCodigoBvsCF.setPreferredSize(null);

        csFilialCF.setToolTipText("ex:0001");
        csFilialCF.setDescricaoRotulo("");
        csFilialCF.setQtdMaxCaracteres(4);
        csFilialCF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csFilialCFActionPerformed(evt);
            }
        });

        csFilialSgl.setToolTipText("ex:01");
        csFilialSgl.setQtdMaxCaracteres(2);

        cccCnpj.setTipo("CNPJ");

        rEmailCF.setText("E-mail:");
        rEmailCF.setPreferredSize(null);

        cdInicioDbNovoCF.setToolTipText("");

        clsSituacaoCF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));

        clsStatusSpc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));

        clsStatusFacmat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));

        rInicioDbnovoCF.setText("Inicio Novo F.L:");
        rInicioDbnovoCF.setPreferredSize(null);

        bSalvarCF.setText("Salvar");
        bSalvarCF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarCFActionPerformed(evt);
            }
        });

        bLimparCF.setText("Cancelar");
        bLimparCF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimparCFActionPerformed(evt);
            }
        });

        rSituacao.setText("SituaÃ§Ã£o:");

        rStatusSpc.setText("Status Spc:");

        rStatusFacmat.setText("Status Facmat:");

        rFilialSgl.setText("Filial SGL:");

        rChaveFacmat.setText("Chave Facmat:");

        rKeyFacmat.setText("Key Facmat:");

        jcbVizualizarSenhaSpc.setText("vizualizar");
        jcbVizualizarSenhaSpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbVizualizarSenhaSpcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ppCadastroLayout = new javax.swing.GroupLayout(ppCadastro);
        ppCadastro.setLayout(ppCadastroLayout);
        ppCadastroLayout.setHorizontalGroup(
            ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppCadastroLayout.createSequentialGroup()
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppCadastroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rNomeCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rFilialCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rEmailCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rCnpjCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rCodigoSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rOperadorSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSenhaSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rCodigoFacmatCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rCodigoBvsCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rStatusSpc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rStatusFacmat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rFilialSgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(csNomeCF, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmEmailCF, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cccCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csCodigoSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csOperadorSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ppCadastroLayout.createSequentialGroup()
                                .addComponent(cshSenhaSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbVizualizarSenhaSpc))
                            .addComponent(csCodigoFacmatCF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(clsStatusFacmat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clsStatusSpc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clsSituacaoCF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                            .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(csFilialSgl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(csFilialCF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                            .addComponent(csCodigoBvsCF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ppCadastroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ppCadastroLayout.createSequentialGroup()
                                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(rChaveFacmat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rKeyFacmat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(csKeyFacmatCF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(csChaveFacmatCF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(ppCadastroLayout.createSequentialGroup()
                                .addComponent(rInicioDbnovoCF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cdInicioDbNovoCF, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))))
                    .addGroup(ppCadastroLayout.createSequentialGroup()
                        .addGap(535, 535, 535)
                        .addComponent(bLimparCF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(bSalvarCF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(579, Short.MAX_VALUE))
        );
        ppCadastroLayout.setVerticalGroup(
            ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rFilialCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csFilialCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rFilialSgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csFilialSgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rNomeCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csNomeCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rEmailCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmEmailCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rCnpjCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cccCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rCodigoSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csCodigoSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rOperadorSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csOperadorSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rSenhaSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cshSenhaSpcCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbVizualizarSenhaSpc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rCodigoFacmatCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csCodigoFacmatCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rCodigoBvsCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csCodigoBvsCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rChaveFacmat, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csChaveFacmatCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rKeyFacmat, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csKeyFacmatCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rInicioDbnovoCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cdInicioDbNovoCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clsSituacaoCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rStatusSpc, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clsStatusSpc, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rStatusFacmat, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clsStatusFacmat, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addGroup(ppCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSalvarCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bLimparCF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        paFilial.addTab("Cadastro", ppCadastro);
        ppCadastro.setEnabled(false);
        ppCadastro.setVisible(false);

        getContentPane().add(paFilial, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bFiltroPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltroPesquisarActionPerformed
        filtroFilialModel = new FilialModel();
        new Thread() {
            @Override
            public void run() {
                try {
                    if (csFiltroCodigo.getText().length() > 0) {
                        filtroFilialModel.setPontoFilial(csFiltroCodigo.getText());
                    }
                    String cnpj = cccFiltroCnpj.getText() != null ? cccFiltroCnpj.getText().replaceAll("[^0-9]", "").trim() : "";
                    if (cnpj != null && !cnpj.isEmpty()) {
                        filtroFilialModel.setCnpjLoja(cnpj);
                    }
                    if (cscFiltroNome.getFiltroOld() != null) {
                        filtroFilialModel.setNomeLoja(cscFiltroNome.getFiltroOld().toString().toUpperCase());
                    }
                    lfiliaisModel = filiaisControler.listarFiliaisController(filtroFilialModel);
                    otmFilial.setData(lfiliaisModel);

                    otmFilial.fireTableDataChanged();
                    jsbCadastroFilial.setStatus("Pesquisa realizada com sucesso.", JPStatus.NORMAL, 10);
                    if (tpConsultaFilial.getRowCount() > 0) {
                        tpConsultaFilial.packAll();
                        tpConsultaFilial.addRowSelectionInterval(tpConsultaFilial.convertRowIndexToView(0), tpConsultaFilial.convertRowIndexToView(0));
                        tpConsultaFilial.grabFocus();
                    }
                } catch (Exception ex) {
                    jsbCadastroFilial.setStatus("Erro ao pesquisar cliente.", JPStatus.ERRO, ex);
                    ex.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_bFiltroPesquisarActionPerformed

    private void bFiltroIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltroIncluirActionPerformed
        cdInicioDbNovoCF.setDate(Utilitarios.getDataZero());
        paFilial.setSelectedComponent(ppCadastro);
        csFilialCF.setEditable(true);
        salvarAlterar = "Salvar";
    }//GEN-LAST:event_bFiltroIncluirActionPerformed

    private void bFiltroAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltroAlterarActionPerformed
        salvarAlterar = "Alterar";
        alterarFilial();
        paFilial.setSelectedComponent(ppCadastro);
        ppCadastro.setVisible(true);

    }//GEN-LAST:event_bFiltroAlterarActionPerformed

    private void bSalvarCFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarCFActionPerformed
        salvarFilial();
    }//GEN-LAST:event_bSalvarCFActionPerformed

    private void bLimparCFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimparCFActionPerformed
        limpar();
        salvarAlterar = "Salvar";
        paFilial.setSelectedComponent(ppConsulta);
        paFilial.setEnabledAt(1, false);
    }//GEN-LAST:event_bLimparCFActionPerformed

    private void tpConsultaFilialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tpConsultaFilialMouseClicked
        if (evt.getClickCount() == 2) {
            alterarFilial();
            paFilial.setSelectedComponent(ppCadastro);
            ppCadastro.setVisible(true);
        }
    }//GEN-LAST:event_tpConsultaFilialMouseClicked

    private void tpConsultaFilialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tpConsultaFilialFocusLost
        copiarColar();
    }//GEN-LAST:event_tpConsultaFilialFocusLost

    private void tpConsultaFilialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpConsultaFilialKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_C) {
            ////if (evt.isControlDown()) {
            valorCopiado = otmFilial.getValueAt(tpConsultaFilial.getSelectedRow(), tpConsultaFilial.getSelectedColumn()).toString();
        }
    }//GEN-LAST:event_tpConsultaFilialKeyPressed

    private void csFilialCFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csFilialCFActionPerformed
    }//GEN-LAST:event_csFilialCFActionPerformed

    private void jcbVizualizarSenhaSpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbVizualizarSenhaSpcActionPerformed
        if (jcbVizualizarSenhaSpc.isSelected()) {
            previousEchoChar = cshSenhaSpcCF.getEchoChar();
            cshSenhaSpcCF.setEchoChar('\u0000');
        } else {
            cshSenhaSpcCF.setEchoChar(previousEchoChar);
        }
    }//GEN-LAST:event_jcbVizualizarSenhaSpcActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.martinello.componentesbasicos.Botao bFiltroAlterar;
    private br.com.martinello.componentesbasicos.Botao bFiltroIncluir;
    private br.com.martinello.componentesbasicos.Botao bFiltroPesquisar;
    private br.com.martinello.componentesbasicos.Botao bLimparCF;
    private br.com.martinello.componentesbasicos.Botao bSalvarCF;
    private br.com.martinello.componentesbasicos.CampoCpfCnpj cccCnpj;
    private br.com.martinello.componentesbasicos.CampoCpfCnpj cccFiltroCnpj;
    private br.com.martinello.componentesbasicos.CampoData cdInicioDbNovoCF;
    private br.com.martinello.componentesbasicos.CampoListaSimples clsSituacaoCF;
    private br.com.martinello.componentesbasicos.CampoListaSimples clsStatusFacmat;
    private br.com.martinello.componentesbasicos.CampoListaSimples clsStatusSpc;
    private br.com.martinello.componentesbasicos.CampoEmail cmEmailCF;
    private br.com.martinello.componentesbasicos.CampoString csChaveFacmatCF;
    private br.com.martinello.componentesbasicos.CampoString csCodigoBvsCF;
    private br.com.martinello.componentesbasicos.CampoString csCodigoFacmatCF;
    private br.com.martinello.componentesbasicos.CampoString csCodigoSpcCF;
    private br.com.martinello.componentesbasicos.CampoString csFilialCF;
    private br.com.martinello.componentesbasicos.CampoString csFilialSgl;
    private br.com.martinello.componentesbasicos.CampoString csFiltroCodigo;
    private br.com.martinello.componentesbasicos.CampoString csKeyFacmatCF;
    private br.com.martinello.componentesbasicos.CampoString csNomeCF;
    private br.com.martinello.componentesbasicos.CampoString csOperadorSpcCF;
    private br.com.martinello.componentesbasicos.consulta.CampoStringConsulta cscFiltroNome;
    private br.com.martinello.componentesbasicos.CampoSenha cshSenhaSpcCF;
    private javax.swing.JCheckBox jcbVizualizarSenhaSpc;
    private br.com.martinello.componentesbasicos.paineis.JPStatus jsbCadastroFilial;
    private javax.swing.JScrollPane jspConsulta;
    private br.com.martinello.componentesbasicos.paineis.PainelAba paFilial;
    private br.com.martinello.componentesbasicos.paineis.PainelPadrao ppCadastro;
    private br.com.martinello.componentesbasicos.paineis.PainelPadrao ppConsulta;
    private br.com.martinello.componentesbasicos.paineis.PainelPadrao ppFiltros;
    private br.com.martinello.componentesbasicos.Rotulo rChaveFacmat;
    private br.com.martinello.componentesbasicos.Rotulo rCnpjCF;
    private br.com.martinello.componentesbasicos.Rotulo rCodigoBvsCF;
    private br.com.martinello.componentesbasicos.Rotulo rCodigoFacmatCF;
    private br.com.martinello.componentesbasicos.Rotulo rCodigoSpcCF;
    private br.com.martinello.componentesbasicos.Rotulo rEmailCF;
    private br.com.martinello.componentesbasicos.Rotulo rFilialCF;
    private br.com.martinello.componentesbasicos.Rotulo rFilialSgl;
    private br.com.martinello.componentesbasicos.Rotulo rFilroNome;
    private br.com.martinello.componentesbasicos.Rotulo rFiltroCnpj;
    private br.com.martinello.componentesbasicos.Rotulo rFiltroCodigo;
    private br.com.martinello.componentesbasicos.Rotulo rInicioDbnovoCF;
    private br.com.martinello.componentesbasicos.Rotulo rKeyFacmat;
    private br.com.martinello.componentesbasicos.Rotulo rNomeCF;
    private br.com.martinello.componentesbasicos.Rotulo rOperadorSpcCF;
    private br.com.martinello.componentesbasicos.Rotulo rSenhaSpcCF;
    private br.com.martinello.componentesbasicos.Rotulo rSituacao;
    private br.com.martinello.componentesbasicos.Rotulo rStatusFacmat;
    private br.com.martinello.componentesbasicos.Rotulo rStatusSpc;
    private br.com.martinello.componentesbasicos.TabelaPadrao tpConsultaFilial;
    // End of variables declaration//GEN-END:variables
 private void limpar() {

        csFilialCF.setText("");
        csFilialSgl.setText("");
        csNomeCF.setText("");
        csCodigoBvsCF.setText("");
        csCodigoFacmatCF.setText("");
        csCodigoSpcCF.setText("");
        csOperadorSpcCF.setText("");
        cshSenhaSpcCF.setText("");
        cccCnpj.setText("");
        cdInicioDbNovoCF.setDate(Utilitarios.getDataZero());
        csChaveFacmatCF.setText("");
        csKeyFacmatCF.setText("");
        cmEmailCF.setText("");
        csFilialCF.setEditable(true);
        csFilialSgl.setEditable(true);
        cccCnpj.setEditable(true);
    }

    private void carregarFiliais() {
        final TelaProcessamento telaProcessamento = new TelaProcessamento("Realizando consulta...");

        new Thread() {
            @Override
            public void run() {
                try {
                    otmFilial.setData(filiaisControler.listarFiliaisController(filtroFilialModel));
                    otmFilial.fireTableDataChanged();

                    jsbCadastroFilial.setStatus("Pesquisa realizada com sucesso.", JPStatus.NORMAL, 10);

                    if (tpConsultaFilial.getRowCount() > 0) {
                        tpConsultaFilial.packAll();
                        tpConsultaFilial.addRowSelectionInterval(tpConsultaFilial.convertRowIndexToView(0), tpConsultaFilial.convertRowIndexToView(0));
                        tpConsultaFilial.grabFocus();
                    }

                } catch (Exception ex) {
                    jsbCadastroFilial.setStatus("Erro ao pesquisar cliente.", JPStatus.ERRO, ex);
                    ex.printStackTrace();
                    SwingUtilities.invokeLater(() -> {
                        telaProcessamento.dispose();
                    });
                }

                SwingUtilities.invokeLater(() -> {
                    telaProcessamento.dispose();
                });
            }
        }.start();

        telaProcessamento.setVisible(true);
        telaProcessamento.requestFocusInWindow();
    }

    private void alterarFilial() {
        filialModel = new FilialModel();
        int linha = tpConsultaFilial.getSelectedRow();
        String codigo = "0";
        if (linha < 0) {
            jsbCadastroFilial.setStatus("Selecione uma Filial na Tabela, antes de clicar em alterar", JPStatus.ALERTA);
        } else {
            codigo = (tpConsultaFilial.getValueAt(linha, 0).toString());

            paFilial.setSelectedComponent(ppCadastro);
            try {
                filialModel = filiaisControler.retornarFiliaisController(codigo);
            } catch (ErroSistemaException ex) {
                ex.printStackTrace();
                jsbCadastroFilial.setStatus("Erro ao Carregar a Filial", JPStatus.ERRO, ex);

            } catch (SQLException ex) {
                ex.printStackTrace();
                jsbCadastroFilial.setStatus("Erro ao Carregar a Filial", JPStatus.ERRO, ex);
            }
            csFilialCF.setText(filialModel.getPontoFilial());
            csFilialCF.setEditable(false);
            csFilialSgl.setEditable(false);
            csNomeCF.setText(filialModel.getNomeLoja());
            cmEmailCF.setText(filialModel.getEmail());
            csCodigoBvsCF.setText(filialModel.getCodigoBvs());
            csCodigoFacmatCF.setText(filialModel.getCodigoFacmat());
            csCodigoSpcCF.setText(filialModel.getCodigoSpc());
            csOperadorSpcCF.setText(filialModel.getOperadorSpc());
            cshSenhaSpcCF.setText(filialModel.getSenhaSpc());
            filiaisControler = new FilialController();
            try {
                verMovCpf = filiaisControler.verificaMovCpf(filialModel.getPontoFilial());

                if (verMovCpf == true) {
                    cccCnpj.setText(filialModel.getCnpjLoja());
                    cccCnpj.setEditable(false);
                    cccCnpj.setToolTipText("Cnpj nÃ£o pode ser alterado pois a filial jÃ¡ possui movimentos \n Verifique!");
                } else {
                    cccCnpj.setText(filialModel.getCnpjLoja());
                    cpfValidar = filialModel.getCnpjLoja();
                }
            } catch (ErroSistemaException ex) {
                ex.printStackTrace();
            }
            cdInicioDbNovoCF.setDate(filialModel.getDataOperacaoDbNovo());
            csFilialSgl.setText(filialModel.getFilialSgl());
            csChaveFacmatCF.setText(filialModel.getChaveFacmat());
            csKeyFacmatCF.setText(filialModel.getKeyFacmat());
            if (filialModel.getStatus().equals("A")) {
                clsSituacaoCF.setSelectedIndex(0);
            } else {
                clsSituacaoCF.setSelectedIndex(1);
            }
            if (filialModel.getStatusSpc().equals("A")) {
                clsStatusSpc.setSelectedIndex(0);
            } else {
                clsStatusSpc.setSelectedIndex(1);
            }
            if (filialModel.getStatusFacmat().equals("A")) {
                clsStatusFacmat.setSelectedIndex(0);
            } else {
                clsStatusFacmat.setSelectedIndex(1);
            }
            salvarAlterar = "Alterar";
        }
    }

    public boolean salvarFilial() {
        int contFiltro = 0;
        filialModel = new FilialModel();
        if (csFilialCF.getText().equals("") | csFilialCF.getText().length() <= 3) {
            jsbCadastroFilial.setStatus("Preencha o campo filial corretamente com 4 digitos!", JPStatus.ALERTA);
            return false;
        } else {
            filialModel.setPontoFilial(csFilialCF.getText());
            contFiltro++;
        }
        if (csFilialSgl.getText().equals("") | csFilialSgl.getText().length() <= 1) {
            jsbCadastroFilial.setStatus("Preencha o campo filial sgl!", JPStatus.ALERTA);
            return false;
        } else {
            filialModel.setFilialSgl(csFilialSgl.getText());
            contFiltro++;
        }
        if (csNomeCF.getText().equals("")) {
            jsbCadastroFilial.setStatus("Preencha o campo nome!", JPStatus.ALERTA);
            return false;
        } else {
            filialModel.setNomeLoja(csNomeCF.getText());
            contFiltro++;
        }
        if (cmEmailCF.getText().equals("")) {
            jsbCadastroFilial.setStatus("Preencha o campo email!", JPStatus.ALERTA);
            return false;
        } else {
            filialModel.setEmail(cmEmailCF.getText());
            contFiltro++;
        }
        if (csCodigoBvsCF.getText().equals("")) {
            jsbCadastroFilial.setStatus("Preencha o campo cÃ³digo bvs!", JPStatus.ALERTA);
            return false;
        } else {
            filialModel.setCodigoBvs(csCodigoBvsCF.getText());
            contFiltro++;
        }
        if (csCodigoFacmatCF.getText().equals("")) {
            jsbCadastroFilial.setStatus("Preencha o campo cÃ³digo facmat!", JPStatus.ALERTA);
            return false;
        } else {
            filialModel.setCodigoFacmat(csCodigoFacmatCF.getText());
            contFiltro++;
        }
        if (csCodigoSpcCF.getText().equals("")) {
            jsbCadastroFilial.setStatus("Preencha o campo cÃ³digo spc!", JPStatus.ALERTA);
            return false;
        } else {
            filialModel.setCodigoSpc(csCodigoSpcCF.getText());
            contFiltro++;
        }
        if (csChaveFacmatCF.getText().equals("")) {
            jsbCadastroFilial.setStatus("Preencha todos os campos obrigatÃ³rios!", JPStatus.ALERTA);
            return false;
        } else {
            filialModel.setChaveFacmat(csChaveFacmatCF.getText());
            contFiltro++;
        }
        if (csKeyFacmatCF.getText().equals("")) {
            jsbCadastroFilial.setStatus("Preencha todos os campos obrigatÃ³rios!", JPStatus.ALERTA);
            return false;
        } else {
            filialModel.setKeyFacmat(csKeyFacmatCF.getText());
            contFiltro++;
        }

        if (csOperadorSpcCF.getText().equals("")) {
            jsbCadastroFilial.setStatus("Preencha o campo operador spc!", JPStatus.ALERTA);
        } else {
            filialModel.setOperadorSpc(csOperadorSpcCF.getText());
            contFiltro++;
        }
        if (cshSenhaSpcCF.getText().equals("")) {
            jsbCadastroFilial.setStatus("Preencha o campo senha spc!", JPStatus.ALERTA);
        } else {
            filialModel.setSenhaSpc(cshSenhaSpcCF.getText());
            contFiltro++;
        }
        System.out.println("cnpj:" + cccCnpj.getText());
        if (cccCnpj.getText().replaceAll("^[0-9]", "").equals("")) {
            jsbCadastroFilial.setStatus("Preencha o campo Cnpj!", JPStatus.ALERTA);
        } else {
            if (ValidacaoCpfCnpj.isCNPJ(cccCnpj.getText()) == true) {
                filialModel.setCnpjLoja(cccCnpj.getText().replaceAll("[^0-9]", ""));
                contFiltro++;
            } else {
                jsbCadastroFilial.setStatus("Preencha o campo Cnpj!", JPStatus.ALERTA);
                return false;
            }
        }
        if (cdInicioDbNovoCF.getDate() == null) {
            jsbCadastroFilial.setStatus("Preencha o campo novo frente de loja!", JPStatus.ALERTA);
            return false;
        } else {
            String dataOperacao;
            dataOperacao = Utilitarios.converteDataString(cdInicioDbNovoCF.getDate(), "dd/MM/yyyy");

            if (dataOperacao.equals("31/12/1900")) {
                filialModel.setDataOperacaoDbNovo(cdInicioDbNovoCF.getDate());
                contFiltro++;
            } else {
                opcao = JOptionPane.showConfirmDialog(null, "A data inicio novo frente de loja precisa ser = 31/12/1900 caso a loja ainda opere no SGL, " + " "
                        + "VocÃª selecionou a data = " + Utilitarios.converteDataString(cdInicioDbNovoCF.getDate(), "dd/MM/yyyy"), "AtenÃ§Ã£o Deseja Confirmar", JOptionPane.YES_NO_OPTION);
                if (opcao == JOptionPane.OK_OPTION) {
                    filialModel.setDataOperacaoDbNovo(cdInicioDbNovoCF.getDate());
                    contFiltro++;
                }

            }
        }
        if (clsSituacaoCF.getSelectedItem().toString().equalsIgnoreCase("Ativo")) {
            filialModel.setStatus("A");
            if (salvarAlterar.equals("Salvar")) {
                filialModel.setDatainicioOperacao(Utilitarios.converteData(new Date()));
            }
        } else {
            filialModel.setStatus("I");
            if (salvarAlterar.equals("Salvar")) {
                filialModel.setDatainicioOperacao(Utilitarios.getDataZero());
            }
            if (salvarAlterar.equals("Alterar")) {

            }
        }
        if (clsStatusSpc.getSelectedItem().toString().equalsIgnoreCase("Ativo")) {
            filialModel.setStatusSpc("A");
        } else {
            filialModel.setStatusSpc("I");
        }
        if (clsStatusFacmat.getSelectedItem().toString().equalsIgnoreCase("Ativo")) {
            filialModel.setStatusFacmat("A");
        } else {
            filialModel.setStatusFacmat("I");
        }
        filialModel.setUsuario(TelaPrincipal.usuario.getLogin());

        if (salvarAlterar.equals("Salvar") && contFiltro >= 11) {

            try {
                filiaisControler.salvarFiliaisControler(filialModel);
                jsbCadastroFilial.setStatus("Filial Cadastrada com Sucesso", JPStatus.NORMAL);
                limpar();
                salvarAlterar = "Salvar";
                paFilial.setSelectedComponent(ppConsulta);
                return true;
            } catch (ErroSistemaException ex) {
                ex.printStackTrace();
                jsbCadastroFilial.setStatus("Erro ao cadastrar filial", JPStatus.ERRO, ex);
            } catch (SQLException ex) {
                ex.printStackTrace();
                jsbCadastroFilial.setStatus("Erro ao cadastrar filial", JPStatus.ERRO, ex);
            }

        } else if (salvarAlterar.equals("Alterar") && contFiltro >= 11) {
            try {

                filiaisControler.atualizarFiliaisController(filialModel);
                jsbCadastroFilial.setStatus("Filial alterada com Sucesso", JPStatus.NORMAL, 10);
                limpar();
                salvarAlterar = "Salvar";
                paFilial.setSelectedComponent(ppConsulta);
                // carregarFiliais();
                salvarAlterar = "Salvar";
                return true;
            } catch (SQLException ex) {
                ex.printStackTrace();
                jsbCadastroFilial.setStatus("Erro ao alterar a Filial", JPStatus.ERRO, ex);
            }
        }
        csFilialCF.setEditable(false);
        limpar();
        return false;
    }

    public void copiarColar() {
        StringSelection stringSelection = new StringSelection(valorCopiado);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);
    }

}
//
// filiaisControler = new FilialController();
//                verMovCpf = filiaisControler.verificaMovCpf(csFilialCF.getString());
//                if (verMovCpf == false) {
//                    filiaisControler.atualizarFiliaisController(filialModel);
//                    jsbCadastroFilial.setStatus("Filial alterada com Sucesso", JPStatus.NORMAL, 10);
//                    limpar();
//                    salvarAlterar = "Salvar";
//                    paFilial.setSelectedComponent(ppConsulta);
//                    // carregarFiliais();
//                    salvarAlterar = "Salvar";
//                }
